// <auto-generated />
using System;
using FlashLeit_API.Data.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FlashLeit_API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CollectionModelUserModel", b =>
                {
                    b.Property<int>("CollectionsCollectionId")
                        .HasColumnType("int");

                    b.Property<int>("UsersUserId")
                        .HasColumnType("int");

                    b.HasKey("CollectionsCollectionId", "UsersUserId");

                    b.HasIndex("UsersUserId");

                    b.ToTable("CollectionModelUserModel");
                });

            modelBuilder.Entity("FlashLeit_API.TestModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TestTable");
                });

            modelBuilder.Entity("flashleit_class_library.Models.AchievementModel", b =>
                {
                    b.Property<int>("AchievementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AchievementId"));

                    b.Property<bool>("IsAchieved")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("UserStatsId")
                        .HasColumnType("int");

                    b.Property<int?>("UserStatsModelUserStatsId")
                        .HasColumnType("int");

                    b.HasKey("AchievementId");

                    b.HasIndex("UserStatsModelUserStatsId");

                    b.ToTable("Achievements");
                });

            modelBuilder.Entity("flashleit_class_library.Models.CardModel", b =>
                {
                    b.Property<int>("CardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CardId"));

                    b.Property<int>("CollectionId")
                        .HasColumnType("int");

                    b.Property<int?>("CollectionModelCollectionId")
                        .HasColumnType("int");

                    b.Property<string>("CorrectAnswer")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("IncorrectAnswerOne")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("IncorrectAnswerThree")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("IncorrectAnswerTwo")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("CardId");

                    b.HasIndex("CollectionModelCollectionId");

                    b.ToTable("Cards");
                });

            modelBuilder.Entity("flashleit_class_library.Models.CollectionModel", b =>
                {
                    b.Property<int>("CollectionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CollectionId"));

                    b.Property<int>("CounterId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("CollectionId");

                    b.ToTable("Collections");
                });

            modelBuilder.Entity("flashleit_class_library.Models.CounterModel", b =>
                {
                    b.Property<int>("CounterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CounterId"));

                    b.Property<int>("AmountOfCardsAnswered")
                        .HasColumnType("int");

                    b.Property<int>("AmountOfCorrectAnswers")
                        .HasColumnType("int");

                    b.Property<int>("AmountOfIncorrectAnswers")
                        .HasColumnType("int");

                    b.Property<int>("AmountOfPerfectRuns")
                        .HasColumnType("int");

                    b.Property<int>("CollectionId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("TimesFinished")
                        .HasColumnType("int");

                    b.Property<int>("TimesStarted")
                        .HasColumnType("int");

                    b.Property<int>("UserStatsId")
                        .HasColumnType("int");

                    b.Property<int?>("UserStatsModelUserStatsId")
                        .HasColumnType("int");

                    b.HasKey("CounterId");

                    b.HasIndex("UserStatsModelUserStatsId");

                    b.ToTable("Counters");
                });

            modelBuilder.Entity("flashleit_class_library.Models.UserModel", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UserStatsId")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.HasIndex("UserStatsId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("flashleit_class_library.Models.UserStatsModel", b =>
                {
                    b.Property<int>("UserStatsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserStatsId"));

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("UserStatsId");

                    b.ToTable("UserStats");
                });

            modelBuilder.Entity("CollectionModelUserModel", b =>
                {
                    b.HasOne("flashleit_class_library.Models.CollectionModel", null)
                        .WithMany()
                        .HasForeignKey("CollectionsCollectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("flashleit_class_library.Models.UserModel", null)
                        .WithMany()
                        .HasForeignKey("UsersUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("flashleit_class_library.Models.AchievementModel", b =>
                {
                    b.HasOne("flashleit_class_library.Models.UserStatsModel", null)
                        .WithMany("Achievements")
                        .HasForeignKey("UserStatsModelUserStatsId");
                });

            modelBuilder.Entity("flashleit_class_library.Models.CardModel", b =>
                {
                    b.HasOne("flashleit_class_library.Models.CollectionModel", null)
                        .WithMany("FlashCards")
                        .HasForeignKey("CollectionModelCollectionId");
                });

            modelBuilder.Entity("flashleit_class_library.Models.CounterModel", b =>
                {
                    b.HasOne("flashleit_class_library.Models.UserStatsModel", null)
                        .WithMany("Counters")
                        .HasForeignKey("UserStatsModelUserStatsId");
                });

            modelBuilder.Entity("flashleit_class_library.Models.UserModel", b =>
                {
                    b.HasOne("flashleit_class_library.Models.UserStatsModel", "UserStats")
                        .WithMany()
                        .HasForeignKey("UserStatsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserStats");
                });

            modelBuilder.Entity("flashleit_class_library.Models.CollectionModel", b =>
                {
                    b.Navigation("FlashCards");
                });

            modelBuilder.Entity("flashleit_class_library.Models.UserStatsModel", b =>
                {
                    b.Navigation("Achievements");

                    b.Navigation("Counters");
                });
#pragma warning restore 612, 618
        }
    }
}
